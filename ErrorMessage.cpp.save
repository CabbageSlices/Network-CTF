#include "ErrorMessage.h"
#include "PredrawnButton.h"
#include "ButtonPlacer.h"

#include <vector>
#include <tr1/memory>

using std::tr1::shared_ptr;
using std::string;

void displayError(sf::RenderWindow& window, const string& message) {

    //save the previous screen so you can display the error message overtop of the previous screen
    sf::Texture previousScreenTexture;
    previousScreenTexture.create(window.getSize().x, window.getSize().y);
    previousScreenTexture.update(window);

    sf::Sprite previousScreenSprite;
    previousScreenSprite.setTexture(previousScreenTexture);

    //load up the texture for the error message screen
    sf::Texture errorScreen;
    errorScreen.loadFromFile("errorMessage.png");

    sf::Sprite errorSprite;
    errorSprite.setTexture(errorScreen);
    
    //create the text representation of the message
    sf::Font font;
    font.loadFromFile("font.ttf");
    
    //the position is based on the image file of the error message so look to that if you want to know why the position was chosen
    sf::Text errorMessage;
    errorMessage.setFont(font);
    errorMessage.setString(message);
    errorMessage.setPosition(425, 300);
    
    errorMessage.setScale(0.70, 0.70);
    
    //button to return to previous screen
    //put in container to use button placer function
    vector<shared_ptr<PredrawnButton> > buttons(shared_ptr<PredrawnButton>(new PredrawnButton("okButton.png") ));
    placeButtons("errormessage.png", buttons);
    
    sf::Event event;
    
    while(window.isOpen()) {
        
        while(window.pollEvent(event)) {
            
            if(event.type == sf::Event::Closed) {
                
                window.close();
            }
            
            if(event.type == sf::Event::MouseButtonPressed && event.mouseButton.button == sf::Mouse::Left) {
                
                sf::Vector2f mousePosition = window.mapPixelToCoords(sf::Mouse::getPosition(window), window.getDefaultView());
                
                if(buttons[okButton]->isMouseTouching(mousePosition)) {
                    
                    return;
                }
            }
        }
        
        window.clear();
        
        window.draw(previousScreenSprite);
        
        window.draw(errorSprite);
        
        for(auto& bu)
    }
}
